{"version":3,"file":"static/js/429.f4751571.chunk.js","mappings":"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","sources":["components/api/api.jsx","webpack://react-homework-template/./src/components/pages/Single movie page/singleMoviePage.module.css?575f","components/pages/Single movie page/SingleMoviePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '9c2333b586e6b509eeb062d943ee4684',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data;\n};\n\nexport const getSearchMovie = async (query = '') => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieWrapper\":\"singleMoviePage_movieWrapper__Ehn83\",\"moviePoster\":\"singleMoviePage_moviePoster__-MdRm\",\"movieInfo\":\"singleMoviePage_movieInfo__2m39A\",\"movieTitle\":\"singleMoviePage_movieTitle__vOgdI\",\"movieInfoContent\":\"singleMoviePage_movieInfoContent__bP-wF\",\"movieGenres\":\"singleMoviePage_movieGenres__kpsk8\",\"movieAdditionalInfoList\":\"singleMoviePage_movieAdditionalInfoList__XOq2V\",\"additionalInfoItem\":\"singleMoviePage_additionalInfoItem__b3rLS\",\"button\":\"singleMoviePage_button__8GnMY\"};","import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getMovieById } from 'components/api/api';\nimport { useCallback } from 'react';\n\nimport styles from './singleMoviePage.module.css';\n\nconst SingleMoviePage = () => {\n  const [movie, setMovie] = useState();\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const data = await getMovieById(id);\n        setMovie(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n        Notiflix.Notify.failure(`${response.data.message}`, { timeout: 5000 });\n      }\n    };\n\n    fetchMovie();\n  }, [id]);\n\n  const goBack = useCallback(() => navigate(from), [navigate, from]);\n\n  return (\n    <>\n      <button onClick={goBack} type=\"button\" className={styles.button}>\n        Go back\n      </button>\n      <div className={styles.movieWrapper}>\n        {movie?.poster_path !== undefined ? (\n          <img\n            className={styles.moviePoster}\n            alt=\"\"\n            src={`https://image.tmdb.org/t/p/w400${movie?.poster_path}`}\n          />\n        ) : (\n          `Movie poster image`\n        )}\n        <div className={styles.movieInfo}>\n          <h1 className={styles.movieTitle}>{movie?.title}</h1>\n          <p className={styles.movieInfoContent}>\n            User Score: {(movie?.vote_average * 10).toFixed(2)}%\n          </p>\n          <h2 className={styles.movieTitle}>Overview</h2>\n          <p className={styles.movieInfoContent}>{movie?.overview}</p>\n          <h2 className={styles.movieTitle}>Genres</h2>\n          <ul className={styles.movieGenres}>\n            {movie?.genres !== undefined\n              ? movie.genres.map(({ id, name }) => (\n                  <li className={styles.movieInfoContent} key={id}>\n                    {name}\n                  </li>\n                ))\n              : `No genres`}\n          </ul>\n        </div>\n      </div>\n      <div>\n        <h3 className={styles.movieTitle}>Additional information</h3>\n\n        <ul className={styles.movieAdditionalInfoList}>\n          <li className={styles.additionalInfoItem}>\n            <Link\n              className={styles.movieInfoContent}\n              state={{ from }}\n              to={`/movies/${id}/cast`}\n            >\n              Cast\n            </Link>\n          </li>\n          <li className={styles.additionalInfoItem}>\n            <Link\n              className={styles.movieInfoContent}\n              state={{ from }}\n              to={`/movies/${id}/reviews`}\n            >\n              Reviews\n            </Link>\n          </li>\n          <Outlet />\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default SingleMoviePage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","query","getMovieById","id","getMovieCast","getMovieReviews","useState","movie","setMovie","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","response","console","log","message","Notiflix","timeout","goBack","useCallback","onClick","type","className","styles","undefined","poster_path","alt","src","title","vote_average","toFixed","overview","genres","map","name","to"],"sourceRoot":""}