{"version":3,"file":"static/js/737.28fec630.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAT,uBADQ,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,2GAAOC,EAAP,+BAAe,GAAf,SACLT,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNM,MAAAA,KAHwB,uBACpBF,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,qDAUdG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAY,mCAAG,WAAMD,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,EAAvB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,oFClC5B,EAA6B,+BAA7B,EAA6E,mCAA7E,EAAuH,yB,SCMjHO,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAP,OACzB,eAAaC,UAAWC,EAAxB,UACE,SAAC,KAAD,CACED,UAAWC,EACXC,GAAE,kBAAaZ,GACfa,MAAO,CAAEC,KAAMT,GAHjB,UAME,uBAAII,KAFCT,IALAA,EADgB,IAa3B,OAAO,eAAIU,UAAWC,EAAf,SAAmCJ,GAC3C,EAED,GAAeQ,EAAAA,EAAAA,MAAKZ,GAEpBA,EAAWa,aAAe,CACxBZ,MAAO,G,yKC5BT,EAA4B,8BAA5B,EAAuE,+BAAvE,EAAyH,qCAAzH,EAAsL,0CAAtL,EAAkP,oC,SCoElP,EA3DmB,WACjB,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAa1B,IAAI,WAEhC6B,EAAAA,EAAAA,YAAU,WACR,GAAKD,EAAL,CAIA,IAAME,EAAU,mCAAG,gHAEW5B,EAAAA,EAAAA,IAAe0B,GAF1B,gBAEPG,EAFO,EAEPA,QACRP,GAAU,OAAIO,IAHC,gDAKfC,IAAAA,OAAAA,QAAA,UAA2B,KAAMC,SAAW,CAAEC,QAAS,MALxC,yDAAH,qDAShBJ,GAXC,CAYF,GAAE,CAACF,IAEJ,IAAMO,GAAeC,EAAAA,EAAAA,cACnB,SAAAC,GACEA,EAAEC,iBACF,IAAQV,EAAWS,EAAEE,cAAc3B,SAA3BgB,OACJA,EAAOY,MAAMC,SACfd,EAAgB,CAAEC,OAAQA,EAAOY,MAAME,gBACvCL,EAAEE,cAAcI,QAEnB,GACD,CAAChB,IAGH,OACE,iCACE,gBAAKZ,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAmB4B,SAAUT,EAA9C,WACE,mBAAQU,KAAK,SAAS9B,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,uBAGF,kBACE8B,KAAK,SACL/B,UAAWC,EACX6B,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,UAAQ,UAKd,SAAC1C,EAAA,EAAD,CAAYC,MAAOc,MAGxB,C","sources":["components/api/api.jsx","webpack://react-homework-template/./src/components/modules/Movies list/moviesList.module.css?5ee0","components/modules/Movies list/MoviesList.jsx","webpack://react-homework-template/./src/components/pages/Movies page/moviesPage.module.css?bb0e","components/pages/Movies page/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '9c2333b586e6b509eeb062d943ee4684',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data;\n};\n\nexport const getSearchMovie = async (query = '') => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"moviesList_moviesList__vVfXL\",\"moviesListItem\":\"moviesList_moviesListItem__NpKKA\",\"link\":\"moviesList_link__bJNA2\"};","import PropTypes from 'prop-types';\n\nimport { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './moviesList.module.css';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title }) => (\n    <li key={id} className={styles.moviesListItem}>\n      <Link\n        className={styles.link}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        key={id}\n      >\n        <p>{title}</p>\n      </Link>\n    </li>\n  ));\n\n  return <ul className={styles.moviesList}>{elements}</ul>;\n};\n\nexport default memo(MoviesList);\n\nMoviesList.defaultProps = {\n  items: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"moviesPage_Searchbar__KjXk3\",\"SearchForm\":\"moviesPage_SearchForm__P2V6N\",\"searchFormButton\":\"moviesPage_searchFormButton__30HMS\",\"searchFormButtonLabel\":\"moviesPage_searchFormButtonLabel__3leyI\",\"SearchFormInput\":\"moviesPage_SearchFormInput__NT2xw\"};","import Notiflix from 'notiflix';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchMovie } from 'components/api/api';\n\nimport MoviesList from 'components/modules/Movies list/MoviesList';\n\nimport styles from './moviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n\n    const fetchPosts = async () => {\n      try {\n        const { results } = await getSearchMovie(search);\n        setMovies([...results]);\n      } catch (error) {\n        Notiflix.Notify.failure(`${error.message}`, { timeout: 5000 });\n      }\n    };\n\n    fetchPosts();\n  }, [search]);\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      const { search } = e.currentTarget.elements;\n      if (search.value.trim()) {\n        setSearchParams({ search: search.value.toLowerCase() });\n        e.currentTarget.reset();\n      }\n    },\n    [setSearchParams]\n  );\n\n  return (\n    <>\n      <div className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={styles.searchFormButton}>\n            <span className={styles.searchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            name=\"search\"\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            required\n          />\n        </form>\n      </div>\n\n      <MoviesList items={movies} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","query","getMovieById","id","getMovieCast","getMovieReviews","MoviesList","items","location","useLocation","elements","map","title","className","styles","to","state","from","memo","defaultProps","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","search","useEffect","fetchPosts","results","Notiflix","message","timeout","handleSubmit","useCallback","e","preventDefault","currentTarget","value","trim","toLowerCase","reset","onSubmit","type","name","autoComplete","autoFocus","placeholder","required"],"sourceRoot":""}