{"version":3,"file":"static/js/905.8c1c2478.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAT,uBADQ,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,2GAAOC,EAAP,+BAAW,GAAX,SACLT,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNM,EAAAA,KAHwB,uBACpBF,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,qDAUdG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAY,mCAAG,WAAMD,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,EAAvB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,2HCQ5B,UApCgB,WACd,IAAQI,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,kHAEYN,EAAAA,EAAAA,IAAgBF,GAF5B,gBAENS,EAFM,EAENA,QACRH,EAAWG,GAHG,gDAILC,EAJK,KAILA,SACTC,QAAQC,IAAIF,EAASd,KAAKiB,SAC1BC,IAAAA,OAAAA,QAAA,UAA2BJ,EAASd,KAAKiB,SAAW,CAAEE,QAAS,MANjD,yDAAH,qDAUfP,GACD,GAAE,CAACR,IAEJ,IAAMgB,EAAWX,EAAQY,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC3B,2BACE,qCAAaD,MACb,6BAAKC,EAAL,SAFOnB,EADkB,IAO7B,OACE,8BACuB,IAApBgB,EAASI,QACR,4EAEA,8BAAMJ,MAIb,C","sources":["components/api/api.jsx","components/pages/Single movie page/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '9c2333b586e6b509eeb062d943ee4684',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data;\n};\n\nexport const getSearchMovie = async (q = '') => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      q,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","import Notiflix from 'notiflix';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'components/api/api';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { results } = await getMovieReviews(id);\n        setReviews(results);\n      } catch ({ response }) {\n        console.log(response.data.message);\n        Notiflix.Notify.failure(`${response.data.message}`, { timeout: 5000 });\n      }\n    };\n\n    fetchCast();\n  }, [id]);\n\n  const elements = reviews.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3>Author: {author}</h3>\n      <p>`{content}`</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {elements.length === 0 ? (\n        <p>Sorry, we don't have any reviews for this movie</p>\n      ) : (\n        <ul> {elements}</ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","q","getMovieById","id","getMovieCast","getMovieReviews","useParams","useState","reviews","setReviews","useEffect","fetchCast","results","response","console","log","message","Notiflix","timeout","elements","map","author","content","length"],"sourceRoot":""}