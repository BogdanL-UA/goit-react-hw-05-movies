{"version":3,"file":"static/js/228.f61fd13d.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAASM,IAAT,uBADQ,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAc,mCAAG,2GAAOC,EAAP,+BAAW,GAAX,SACLT,EAASM,IAAT,gBAA8B,CACnDH,OAAQ,CACNM,EAAAA,KAHwB,uBACpBF,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,qDAUdG,EAAY,mCAAG,WAAMC,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,IADpB,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAY,mCAAG,WAAMD,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,EAAvB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,oFClC5B,GAAgB,iBAAmB,sC,SCM7BO,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAMI,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAP,OACzB,SAAC,KAAD,CACEC,UAAWC,EAAAA,KACXC,GAAE,kBAAaZ,GACfa,MAAO,CAAEC,KAAMT,GAHjB,UAME,uBAAII,KAFCT,EALkB,IAW3B,OAAO,eAAIU,UAAWC,EAAAA,WAAf,SAAmCJ,GAC3C,EAED,GAAeQ,EAAAA,EAAAA,MAAKZ,GAEpBA,EAAWa,aAAe,CACxBZ,MAAO,G,0HCgCT,UApDmB,WACjB,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAa1B,IAAI,WAEhC6B,EAAAA,EAAAA,YAAU,WACR,GAAKD,EAAL,CAIA,IAAME,EAAU,mCAAG,gHAEW5B,EAAAA,EAAAA,IAAe0B,GAF1B,gBAEPG,EAFO,EAEPA,QAERP,GAAU,OAAIO,IAJC,gDAMfC,QAAQC,IAAI,KAAMC,SANH,yDAAH,qDAUhBJ,GAZC,CAaF,GAAE,CAACF,IAEJ,IAAMO,GAAeC,EAAAA,EAAAA,cACnB,SAAAC,GACEA,EAAEC,iBACF,IAAQV,EAAWS,EAAEE,cAAc3B,SAA3BgB,OACRD,EAAgB,CAAEC,OAAQA,EAAOY,MAAMC,gBACvCJ,EAAEE,cAAcG,OACjB,GACD,CAACf,IAGH,OACE,iCACE,kBAAMgB,SAAUR,EAAhB,WACE,kBACES,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,UAAQ,KAEV,mBAAQJ,KAAK,SAAb,wBAGF,SAAC,IAAD,CAAYtB,OAAQA,MAGzB,C","sources":["components/api/api.jsx","webpack://react-homework-template/./src/components/modules/Movies list/MoviesList.module.css?5fb6","components/modules/Movies list/MoviesList.jsx","components/pages/Movies page/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '9c2333b586e6b509eeb062d943ee4684',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data;\n};\n\nexport const getSearchMovie = async (q = '') => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      q,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trendsMoviesList\":\"MoviesList_trendsMoviesList__6lTRa\"};","import PropTypes from 'prop-types';\n\nimport { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title }) => (\n    <Link\n      className={styles.link}\n      to={`/movies/${id}`}\n      state={{ from: location }}\n      key={id}\n    >\n      <p>{title}</p>\n    </Link>\n  ));\n\n  return <ul className={styles.moviesList}>{elements}</ul>;\n};\n\nexport default memo(MoviesList);\n\nMoviesList.defaultProps = {\n  items: [],\n};\n\nMoviesList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchMovie } from 'components/api/api';\n\nimport MoviesList from 'components/modules/Movies list/MoviesList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n\n    const fetchPosts = async () => {\n      try {\n        const { results } = await getSearchMovie(search);\n\n        setMovies([...results]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchPosts();\n  }, [search]);\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      const { search } = e.currentTarget.elements;\n      setSearchParams({ search: search.value.toLowerCase() });\n      e.currentTarget.reset();\n    },\n    [setSearchParams]\n  );\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          required\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","q","getMovieById","id","getMovieCast","getMovieReviews","MoviesList","items","location","useLocation","elements","map","title","className","styles","to","state","from","memo","defaultProps","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","search","useEffect","fetchPosts","results","console","log","message","handleSubmit","useCallback","e","preventDefault","currentTarget","value","toLowerCase","reset","onSubmit","name","type","autoComplete","autoFocus","placeholder","required"],"sourceRoot":""}